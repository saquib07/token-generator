user
Create a React app with the following instructions:  Display a webform with following fields.
a. Number of blue tokens.
b. Prefix for blue tokens
c. Blue tokens per row
d. Number of red tokens.
e. Prefix for red tokens.
f. Red tokens per row
2. Generate: On clicking generate button, the tokens have to be displayed as per the given fields.
3. TokenPrefix: The tokens are numbered from 1 and increments serially. The prefix is added to the
token number as given in the wireframe
4. User can enter values in the field and click generate and the token display will be updated
accordingly.
5. Clear: Clear the values from the fields and clear the tokens.
bot
 import React, { useState } from 'react';
import './App.css';

function App() {
  const [blueTokens, setBlueTokens] = useState(0);
  const [bluePrefix, setBluePrefix] = useState('');
  const [bluePerRow, setBluePerRow] = useState(0);
  const [redTokens, setRedTokens] = useState(0);
  const [redPrefix, setRedPrefix] = useState('');
  const [redPerRow, setRedPerRow] = useState(0);

  function generateTokens() {
    let blueTokenList = [];
    let redTokenList = [];

    for (let i=1; i<=blueTokens; i++) {
      blueTokenList.push(`${bluePrefix}${i}`)

      if (i % bluePerRow === 0) {
        blueTokenList.push('\n'); // add a new line after every row of tokens is generated. 
      }  

    }

    for (let j=1; j<=redTokens; j++) {
      redTokenList.push(`${redPrefix}${j}`)

      if (j % redPerRow === 0) {
        redTokenList.push('\n'); // add a new line after every row of tokens is generated. 
      }  

    }

    return ( <div> <p> Blue Tokens: {blueTokenList} </p> <p> Red Tokens: {redTokenList} </p> </div>) ;  

  }

  return (     <div className="App">       <h1> Token Generator </h1>       <form>         Number of Blue Tokens:           <input type="number" value={blueTokens} onChange={e => setBlueTokens(e.target.value)} />         Prefix for Blue Tokens:           <input type="text" value={bluePrefix} onChange={e => setBluePrefix(e.target.value)} />         Blue Tokens per Row:           <input type="number" value={bluePerRow} onChange={e => setBluePerRow(e.target.value)} />         Number of Red Tokens:           <input type="number" value={redTokens} onChange={e => setRedTokens(e.target.value)} />         Prefix for Red Tokens:           <input type="text" value={redPrefix} onChange={e => setRedPrefix(e.target.value)} />         Red Tokens per Row:           <input type="number" value={redPerRow} onChange={e => setRedPerRow(e.target
Ask your AI partner...